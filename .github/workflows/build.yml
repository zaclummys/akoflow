name: Build

on:
  workflow_call:
    inputs:
      version:
        description: "Version string for built binaries"
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image for building
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .devcontainer/dev.Dockerfile
          load: true
          tags: akoflow-builder:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build all binaries
        run: |
          mkdir -p releases/bin
          docker run --rm -v $(pwd):/app -e VERSION=${{ inputs.version }} akoflow-builder:latest sh -c "\
          mkdir -p /app/releases/bin && \
          GOOS=linux GOARCH=amd64 go build -o /app/releases/bin/akoflow-server_${{ inputs.version }}_linux_amd64 /app/cmd/server/main.go && \
          GOOS=linux GOARCH=arm64 go build -o /app/releases/bin/akoflow-server_${{ inputs.version }}_linux_arm64 /app/cmd/server/main.go && \
          GOOS=windows GOARCH=amd64 go build -o /app/releases/bin/akoflow-server_${{ inputs.version }}_windows_amd64.exe /app/cmd/server/main.go && \
          GOOS=darwin GOARCH=amd64 go build -o /app/releases/bin/akoflow-server_${{ inputs.version }}_darwin_amd64 /app/cmd/server/main.go && \
          GOOS=darwin GOARCH=arm64 go build -o /app/releases/bin/akoflow-server_${{ inputs.version }}_darwin_arm64 /app/cmd/server/main.go && \
          GOOS=linux GOARCH=amd64 go build -o /app/releases/bin/akoflow-client_${{ inputs.version }}_linux_amd64 /app/cmd/client/main.go && \
          GOOS=linux GOARCH=arm64 go build -o /app/releases/bin/akoflow-client_${{ inputs.version }}_linux_arm64 /app/cmd/client/main.go && \
          GOOS=windows GOARCH=amd64 go build -o /app/releases/bin/akoflow-client_${{ inputs.version }}_windows_amd64.exe /app/cmd/client/main.go && \
          GOOS=darwin GOARCH=amd64 go build -o /app/releases/bin/akoflow-client_${{ inputs.version }}_darwin_amd64 /app/cmd/client/main.go && \
          GOOS=darwin GOARCH=arm64 go build -o /app/releases/bin/akoflow-client_${{ inputs.version }}_darwin_arm64 /app/cmd/client/main.go"

      - name: Upload binaries as artifact
        uses: actions/upload-artifact@v4
        with:
          name: akoflow-binaries
          path: releases/bin
